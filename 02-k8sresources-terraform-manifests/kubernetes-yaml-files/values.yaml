# # General RBAC and Security Settings
# rbac:
#   create: true

# podSecurityPolicy:
#   enabled: true  # Enable if your cluster requires PSP

# # Image Pull Secrets (if needed)
# imagePullSecrets: []

# # Service Account Settings
# serviceAccounts:
#   server:
#     create: true
#     name: ""
#     annotations: {}

# # Grafana Configuration
# grafana:
#   image:
#     repository: grafana/grafana
#     tag: 11.1.4
#     pullPolicy: IfNotPresent

#   adminUser: admin
#   adminPassword: password

#   service:
#     type: LoadBalancer  # Expose Grafana externally using a LoadBalancer
#     port: 80

#   persistence:
#     enabled: true
#     storageClassName: "prometheus"  # Specify the correct storage class
#     accessModes:
#       - ReadWriteOnce
#     size: 10Gi  # Specify the appropriate size for your use case

#   readinessProbe:
#     httpGet:
#       path: /api/health
#       port: 3000
#     initialDelaySeconds: 60  # Increased delay to allow Grafana to initialize
#     timeoutSeconds: 10
#     periodSeconds: 10
#     failureThreshold: 6

#   livenessProbe:
#     httpGet:
#       path: /api/health
#       port: 3000
#     initialDelaySeconds: 60
#     timeoutSeconds: 30
#     periodSeconds: 15
#     failureThreshold: 10

#   # sidecar:
#   #   image:
#   #     repository: quay.io/kiwigrid/k8s-sidecar  # Corrected image reference
#   #     tag: 1.15.6
#   #   dashboards:
#   #     enabled: true
#   #     label: grafana_dashboard
#   #     folder: /tmp/dashboards
#   #     configMap:
#   #       name: grafana-dashboards

#   rbac:
#     create: true
#     pspEnabled: true

#   serviceAccount:
#     create: true
#     name: grafana-sa

#   deploymentStrategy: 
#     type: RollingUpdate
#     rollingUpdate:
#       maxUnavailable: 1

#   resources:  # Example resource limits and requests
#     requests:
#       cpu: 100m
#       memory: 128Mi
#     limits:
#       cpu: 200m
#       memory: 256Mi

# # Prometheus Configuration
# prometheus:
#   image:
#     repository: quay.io/prometheus/prometheus
#     tag: v2.30.3
#     pullPolicy: IfNotPresent

#   service:
#     type: LoadBalancer  # Expose Prometheus externally using a LoadBalancer
#     port: 9090

#   persistence:
#     enabled: true
#     accessModes:
#       - ReadWriteOnce
#     size: 8Gi  # Specify the appropriate size for your use case
#     storageClassName: "prometheus"  # Specify the correct storage class

#   resources:  # Example resource limits and requests
#     requests:
#       cpu: 200m
#       memory: 256Mi
#     limits:
#       cpu: 400m
#       memory: 512Mi

#   alertmanager:
#     enabled: true
#     persistence:
#       enabled: true
#       size: 2Gi
#       accessModes:
#         - ReadWriteOnce

#   kube-state-metrics:
#     enabled: true

#   nodeExporter:
#     enabled: true
#     rbac:
#       pspEnabled: true

#   configmapReload:
#     prometheus:
#       enabled: true
#       name: configmap-reload
#       image:
#         repository: jimmidyson/configmap-reload
#         tag: v0.8.0

#   readinessProbe:
#     httpGet:
#       path: /-/ready
#       port: 9090
#     initialDelaySeconds: 30
#     timeoutSeconds: 4
#     periodSeconds: 5
#     failureThreshold: 3

#   livenessProbe:
#     httpGet:
#       path: /-/healthy
#       port: 9090
#     initialDelaySeconds: 30
#     timeoutSeconds: 10
#     periodSeconds: 10
#     failureThreshold: 3

# # Ingress Configuration
# ingress:
#   enabled: false  # Set to true if you prefer using Ingress instead of LoadBalancer

# # Other Common Settings
# replicaCount: 1  # Set replicas for high availability

# # Network Policies
# networkPolicy:
#   enabled: false  # Enable if you need to restrict network access

# # Alertmanager Configuration
# alertmanager:
#   enabled: true
#   resources:
#     requests:
#       cpu: 100m
#       memory: 128Mi
#     limits:
#       cpu: 200m
#       memory: 256Mi

# # Kube State Metrics Configuration
# kubeStateMetrics:
#   enabled: true

# # Node Exporter Configuration
# nodeExporter:
#   enabled: true
#   rbac:
#     pspEnabled: true
#   resources:
#     requests:
#       cpu: 50m
#       memory: 50Mi
#     limits:
#       cpu: 100m
#       memory: 100Mi
